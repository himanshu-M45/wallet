plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version '0.9.4' // Plugin for Protobuf
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

def grpcVersion = '1.60.0'
def protobufVersion = '4.28.2'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web' //	spring boot web
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // spring boot test
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' //	junit
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //	jpa
    implementation 'org.postgresql:postgresql' //	postgresql
    implementation 'org.projectlombok:lombok:1.18.24' //	lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.24' //	lombok
    runtimeOnly 'com.h2database:h2' //	h2 database
    implementation 'org.springframework.boot:spring-boot-starter-security' //	spring security
    implementation 'org.liquibase:liquibase-core:4.20.0' //	liquibase
    // gRPC dependencies with fixed versions
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Clean the generated sources
clean {
    delete protobuf.generatedFilesBaseDir
}

tasks.processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}